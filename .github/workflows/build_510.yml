name: "Build kernels 5.10"

env:
  CONFIGURATION: "repos_android12-5.10.json"
  OUT_DIR: "out"

on:
  workflow_dispatch:

jobs:
  Set-repos:
    name: "🐂 Parse repos.json"
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.generate-matrix.outputs.repos }}
    steps:
      - name: "😄 Checkout"
        uses: actions/checkout@v3

      - name: "😆 Generate Matrix"
        id: generate-matrix
        run: |
          echo "repos<<EOF" >> $GITHUB_OUTPUT
          cat  ${{ env.CONFIGURATION }} >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  Build-Kernel:
    name: "🐎 Build kernel"
    runs-on: ubuntu-latest
    needs:
      - Set-repos
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        repos: ${{ fromJSON(needs.Set-repos.outputs.repos) }}
    env:
      kernelDir: ${{ matrix.repos.kernelSource.name }}_${{ matrix.repos.kernelSource.device }}

      kernelName: ${{ matrix.repos.kernelSource.name }}
      kernelRepo: ${{ matrix.repos.kernelSource.repo }}
      kernelBranch: ${{ matrix.repos.kernelSource.branch }}
      kernelDevice: ${{ matrix.repos.kernelSource.device }}

      DEFCONFIG_NAME: ${{ matrix.repos.kernelSource.device }}_defconfig

      withKernelSU: ${{ matrix.repos.withKernelSU }}
        
    steps:
      - name: "⭐ Install prerequisites"
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential bc curl git zip ftp gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi libssl-dev lftp zstd wget libfl-dev python2 python3 libarchive-tools repo gzip

      - name: "💫 Get toolchains"
        run: |
          git clone --depth 1 https://github.com/reigadegr/Android-Kernel-Builder
          cd Android-Kernel-Builder
          repo init --depth 1 -u https://android.googlesource.com/kernel/manifest -b common-android12-5.10
          repo sync -j$(nproc --all) --no-tags --no-clone-bundle --force-sync
          rm -rf common .repo
          # sed -i 's/return ${RES}/return 0/g' build/_setup_env.sh
          
      - name: "🌟 Clone kernel source => (${{ env.kernelRepo }})"
        run: |
          cd Android-Kernel-Builder
          git clone --recursive --branch $kernelBranch $kernelRepo $kernelName --depth=1
          mv $kernelName common
          rm -rf common/.git
          
      - name: "😋 Update KernelSU"
        if: ${{ env.withKernelSU == 'true' }}
        run: |
          cd Android-Kernel-Builder
          rm -rf "./KernelSU" 2>/dev/null
          rm -rf "./drivers/kernelsu" 2>/dev/null
          if [ ! -d "./drivers/staging/kernelsu" ]; then
            curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main
          fi

      - name: "🎶 Build kernel"
        env:
          args: ${{ steps.generate-args.outputs.args }}
        run: |
          echo "PATH Variable: $PATH"
          cd Android-Kernel-Builder
          mkdir -p out/dist
          BUILD_CONFIG=common/build.config.gki.aarch64 build/config.sh savedefconfig
          LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh | tee out/dist/build_log.txt
          cd out/dist
          rm -f ./vmlinux ./Image.lz4 ./kernel-headers.tar.gz
          cp $(find .. -name ".config") .
          gzip ./Image
          
      - name: "🥰 Pack artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.kernelName }}
          compression-level: 9
          path: Android-Kernel-Builder/out/dist
